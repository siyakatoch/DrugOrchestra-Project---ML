import numpy as np
from sklearn.model_selection import KFold
from sklearn.linear_model import LogisticRegression
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import precision_recall_curve, auc, roc_curve

# Load the dataset
file_path = r'C:\Users\siyak\Downloads\data\sider\data.npy'
data = np.load(file_path, allow_pickle=True)

# Separate features and target
X = data[:, :-1]
y = data[:, -1]

# Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Specify the number of components for PCA
n_components = 10
pca = PCA(n_components=n_components)
X_pca = pca.fit_transform(X_scaled)

# Initialize logistic regression model
model = LogisticRegression()

# Define the number of folds
n_splits = 3

# Initialize arrays to store results
precision_list, recall_list, auprc_list = [], [], []
fpr_list, tpr_list, auroc_list = [], [], []

# Perform 3 k-fold cross-validation
kf = KFold(n_splits=n_splits)
for train_index, test_index in kf.split(X_pca):
    X_train, X_test = X_pca[train_index], X_pca[test_index]
    y_train, y_test = y[train_index], y[test_index]
    
    # Fit the mo
