import numpy as np
from sklearn.model_selection import cross_val_predict
from sklearn.linear_model import LogisticRegression
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import precision_recall_curve, auc

# Load the dataset
file_path = r'C:/Users/siyak/Downloads/data/repurposing_hub/data.npy'
data = np.load(file_path, allow_pickle=True)

# Separate features and target
X = data[:, :-1]
y = data[:, -1]

# Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Specify the number of components for PCA
n_components = 10
pca = PCA(n_components=n_components)
X_pca = pca.fit_transform(X_scaled)

# Initialize logistic regression model
model = LogisticRegression()

# Perform 3-fold cross-validation predictions
y_proba = cross_val_predict(model, X_pca, y, cv=3, method='predict_proba')[:, 1]

# Compute precision-recall curve
precision, recall, _ = precision_recall_curve(y, y_proba)

# Calculate AUPRC
auprc = auc(recall, precision)
print("Area Under Precision-Recall Curve (AUPRC):", auprc)


import numpy as np
from sklearn.model_selection import cross_val_predict
from sklearn.linear_model import LogisticRegression
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import roc_curve, auc

# Load the dataset
file_path = r'C:/Users/siyak/Downloads/data/repurposing_hub/data.npy'
data = np.load(file_path, allow_pickle=True)

# Separate features and target
X = data[:, :-1]
y = data[:, -1]

# Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Specify the number of components for PCA
n_components = 10
pca = PCA(n_components=n_components)
X_pca = pca.fit_transform(X_scaled)

# Initialize logistic regression model
model = LogisticRegression()

# Perform 3-fold cross-validation predictions
y_proba = cross_val_predict(model, X_pca, y, cv=3, method='predict_proba')[:, 1]

# Compute ROC curve
fpr, tpr, _ = roc_curve(y, y_proba)

# Calculate AUROC
auroc = auc(fpr, tpr)
print("Area Under ROC Curve (AUROC):", auroc)
